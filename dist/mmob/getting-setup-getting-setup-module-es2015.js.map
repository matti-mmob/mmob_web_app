{"version":3,"sources":["./src/app/getting-setup/name/name.component.ts","./src/app/getting-setup/name/name.component.html","./src/app/getting-setup/mobile/mobile.component.ts","./src/app/getting-setup/mobile/mobile.component.html","./src/app/getting-setup/getting-setup.module.ts","./src/app/getting-setup/password/password.component.ts","./src/app/getting-setup/password/password.component.html","./src/app/getting-setup/getting-setup-routing.module.ts","./src/app/getting-setup/terms-and-conditions/terms-and-conditions.component.ts","./src/app/getting-setup/terms-and-conditions/terms-and-conditions.component.html","./src/app/getting-setup/request-bank-data/request-bank-data.component.ts","./src/app/getting-setup/request-bank-data/request-bank-data.component.html","./src/app/getting-setup/two-factor-authentication/two-factor-authentication.component.ts","./src/app/getting-setup/two-factor-authentication/two-factor-authentication.component.html","./src/app/getting-setup/banks/banks.component.ts","./src/app/getting-setup/banks/banks.component.html","./src/app/getting-setup/email/email.component.ts","./src/app/getting-setup/email/email.component.html"],"names":[],"mappings":"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","file":"getting-setup-getting-setup-module-es2015.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {AssetsPathPipe} from 'src/app/shared/pipes/assets-path.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {FieldsValidateService} from 'src/app/service/fields-validate.service';\r\nimport {Router} from '@angular/router';\r\nimport {NavigationUrl} from 'src/app/shared/constant/navigation-url.constant';\r\n\r\n@Component({\r\n  selector: 'app-name',\r\n  templateUrl: './name.component.html',\r\n  styleUrls: ['./name.component.css']\r\n})\r\nexport class NameComponent implements OnInit {\r\n  nameForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.nameForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n    });\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    if (this.nameForm.invalid) {\r\n      return this.fieldsValidateService.validateAllFormFields(this.nameForm);\r\n    } else {\r\n      this.route.navigate(['/getting-setup/email']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"align-center setup-section\">\r\n  <figure><img alt=\"pass-img\" src=\"{{'images/pass.png' | assetsPath}}\"></figure>\r\n  <h5><strong>What's your name?</strong></h5>\r\n  <div class=\"setup-box\">\r\n    <p>This can be your real name, preferred name, nick name or alias- it doesn't need to match your ID.</p>\r\n    <form [formGroup]=\"nameForm\">\r\n      <div class=\"form-group\">\r\n        <i *ngIf=\"nameForm.controls.name.valid\"><img alt=\"tick-icon\"\r\n                                                     src=\"{{'images/tick-icon.png' | assetsPath}}\"></i>\r\n        <input class=\"form-control\" formControlName=\"name\" type=\"text\">\r\n        <app-show-errors [control]=\"nameForm.controls.name\"></app-show-errors>\r\n      </div>\r\n      <input (click)=\"onNext()\" class=\"next-btn\" href=\"#\" type=\"button\" value=\"Next\">\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AssetsPathPipe} from 'src/app/shared/pipes/assets-path.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {FieldsValidateService} from 'src/app/service/fields-validate.service';\r\nimport {Router} from '@angular/router';\r\nimport {NavigationUrl} from 'src/app/shared/constant/navigation-url.constant';\r\n\r\n@Component({\r\n  selector: 'app-mobile',\r\n  templateUrl: './mobile.component.html',\r\n  styleUrls: ['./mobile.component.css']\r\n})\r\nexport class MobileComponent implements OnInit {\r\n  mobileForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.mobileForm = this.formBuilder.group({\r\n      mobile: ['', Validators.required],\r\n    });\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    if (this.mobileForm.invalid) {\r\n      return this.fieldsValidateService.validateAllFormFields(this.mobileForm);\r\n    } else {\r\n      this.route.navigate(['/getting-setup/two-factor-authentication']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"align-center setup-section\">\r\n  <figure><img alt=\"kyc-img\" src=\"{{'images/kyc.png' | assetsPath}}\"></figure>\r\n  <h5><strong>Enter your Mobile Number</strong></h5>\r\n  <div class=\"setup-box\">\r\n    <p>Please enter your phone number for <span>two factor authentication.</span></p>\r\n    <form [formGroup]=\"mobileForm\">\r\n      <div class=\"form-group\">\r\n        <input class=\"form-control\" formControlName=\"mobile\" type=\"text\">\r\n        <app-show-errors [control]=\"mobileForm.controls.mobile\"></app-show-errors>\r\n      </div>\r\n      <input (click)=\"onNext()\" class=\"next-btn\" type=\"button\" value=\"Confirm\">\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {GettingSetupRoutingModule} from './getting-setup-routing.module';\r\nimport {NameComponent} from './name/name.component';\r\nimport {EmailComponent} from './email/email.component';\r\nimport {PasswordComponent} from './password/password.component';\r\nimport {MobileComponent} from './mobile/mobile.component';\r\nimport {TwoFactorAuthenticationComponent} from './two-factor-authentication/two-factor-authentication.component';\r\nimport {TermsAndConditionsComponent} from './terms-and-conditions/terms-and-conditions.component';\r\nimport {BanksComponent} from './banks/banks.component';\r\nimport {RequestBankDataComponent} from './request-bank-data/request-bank-data.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [NameComponent, EmailComponent, PasswordComponent, MobileComponent, TwoFactorAuthenticationComponent,\r\n    TermsAndConditionsComponent, BanksComponent, RequestBankDataComponent],\r\n  imports: [\r\n    GettingSetupRoutingModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class GettingSetupModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AssetsPathPipe} from 'src/app/shared/pipes/assets-path.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {FieldsValidateService} from 'src/app/service/fields-validate.service';\r\nimport {Router} from '@angular/router';\r\nimport {NavigationUrl} from 'src/app/shared/constant/navigation-url.constant';\r\nimport {CustomValidators} from 'src/app/shared/validators/custom-validators';\r\n\r\n@Component({\r\n  selector: 'app-password',\r\n  templateUrl: './password.component.html',\r\n  styleUrls: ['./password.component.css']\r\n})\r\nexport class PasswordComponent implements OnInit {\r\n  passwordForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.passwordForm = this.formBuilder.group({\r\n      password: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          // check whether the entered password has a number\r\n          CustomValidators.patternValidator(/\\d/, {\r\n            hasNumber: true\r\n          }),\r\n          // check whether the entered password has upper case letter\r\n          CustomValidators.patternValidator(/[A-Z]/, {\r\n            hasCapitalCase: true\r\n          }),\r\n          // check whether the entered password has a lower case letter\r\n          CustomValidators.patternValidator(/[a-z]/, {\r\n            hasSmallCase: true\r\n          }),\r\n          // check whether the entered password has a special character\r\n          CustomValidators.patternValidator(\r\n            /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/,\r\n            {\r\n              hasSpecialCharacters: true\r\n            }\r\n          ),\r\n          Validators.minLength(8)\r\n        ])\r\n      ],\r\n\r\n    });\r\n  }\r\n\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    if (this.passwordForm.invalid) {\r\n      return this.fieldsValidateService.validateAllFormFields(this.passwordForm);\r\n    } else {\r\n      this.route.navigate(['/getting-setup/mobile']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"align-center setup-section\">\r\n  <figure><img alt=\"pass-img\" src=\"{{'images/access.png' | assetsPath}}\"></figure>\r\n  <h5><strong>Choose a secure password</strong></h5>\r\n  <div class=\"setup-box\">\r\n    <form [formGroup]=\"passwordForm\">\r\n\r\n      <div class=\"form-group\">\r\n        <i><img alt=\"eye-icon\" src=\"{{'images/eye-icon.png' | assetsPath}}\"></i>\r\n        <input class=\"form-control\" formControlName=\"password\" type=\"password\">\r\n        <app-show-errors [control]=\"passwordForm.controls.password\"></app-show-errors>\r\n      </div>\r\n      <ul>\r\n        <li>Your password should include at least:</li>\r\n        <li\r\n            [ngClass]=\"passwordForm.controls['password'].hasError('required') || passwordForm.controls['password'].hasError('minlength')  ? '' : 'text-success'\">\r\n          <img src=\"{{'images/tick-bullet.jpg' | assetsPath}}\"> 8 character\r\n        </li>\r\n        <li\r\n            [ngClass]=\"passwordForm.controls['password'].hasError('required') || passwordForm.controls['password'].hasError('hasNumber')  ? '' : 'text-success'\">\r\n          <img src=\"{{'images/tick-bullet.jpg' | assetsPath}}\"> 1 number\r\n        </li>\r\n        <li\r\n            [ngClass]=\"passwordForm.controls['password'].hasError('required') || passwordForm.controls['password'].hasError('hasCapitalCase')  ? '' : 'text-success'\">\r\n          <img src=\"{{'images/tick-bullet.jpg' | assetsPath}}\"> 1 capital letter\r\n        </li>\r\n        <li\r\n            [ngClass]=\"passwordForm.controls['password'].hasError('required') || passwordForm.controls['password'].hasError('hasSpecialCharacters') ? '' : 'text-success'\">\r\n          <img src=\"{{'images/tick-bullet.jpg' | assetsPath}}\"> 1 special character (e.g. $@&%)\r\n        </li>\r\n      </ul>\r\n      <input (click)=\"onNext()\" class=\"next-btn\" type=\"button\" value=\"Continue\">\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NameComponent} from './name/name.component';\r\nimport {EmailComponent} from './email/email.component';\r\nimport {NavigationUrl} from 'src/app/shared/constant/navigation-url.constant';\r\nimport {PasswordComponent} from './password/password.component';\r\nimport {MobileComponent} from './mobile/mobile.component';\r\nimport {TwoFactorAuthenticationComponent} from './two-factor-authentication/two-factor-authentication.component';\r\nimport {TermsAndConditionsComponent} from './terms-and-conditions/terms-and-conditions.component';\r\nimport {BanksComponent} from './banks/banks.component';\r\nimport {RequestBankDataComponent} from './request-bank-data/request-bank-data.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: NameComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_EMAIL, component: EmailComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_PASSWORD, component: PasswordComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_MOBILE, component: MobileComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_TWO_FACTOR_AUTHENTICATION, component: TwoFactorAuthenticationComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_TREMS_AND_CONDITION, component: TermsAndConditionsComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_BANKS, component: BanksComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_REQUEST_BANK_DATA, component: RequestBankDataComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GettingSetupRoutingModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AssetsPathPipe } from 'src/app/shared/pipes/assets-path.pipe';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { FieldsValidateService } from 'src/app/service/fields-validate.service';\r\nimport { Router } from '@angular/router';\r\nimport { NavigationUrl } from 'src/app/shared/constant/navigation-url.constant';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationPopupComponent } from 'src/app/shared/confirmation-popup/confirmation-popup.component';\r\nimport { Constant } from 'src/app/shared/constant/constant';\r\nimport { TermsConditionsComponent } from 'src/app/shared/terms-conditions/terms-conditions.component';\r\nimport { PrivacyComponent } from 'src/app/shared/privacy/privacy.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-terms-and-conditions',\r\n  templateUrl: './terms-and-conditions.component.html',\r\n  styleUrls: ['./terms-and-conditions.component.css']\r\n})\r\nexport class TermsAndConditionsComponent implements OnInit {\r\n  termConditionForm: FormGroup;\r\n  //Navigation Url Constants\r\n  navigationUrl = NavigationUrl;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router,\r\n    private modalService: NgbModal) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.termConditionForm = this.formBuilder.group({\r\n      age: [''],\r\n      termAndCondition: [''],\r\n    });\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    return this.modalService.open(PrivacyComponent, { backdrop: 'static', keyboard: false,scrollable: true });\r\n  }\r\n  showPopUp() {\r\n    return this.modalService.open(TermsConditionsComponent, { backdrop: 'static', keyboard: false,scrollable: true });\r\n\r\n  }\r\n  onNextprivacy() {\r\n    this.showPopUp();\r\n  }\r\n  continue() {\r\n    if (this.termConditionForm.invalid) {\r\n       alert(\"Both check boxes are required\");\r\n      return this.fieldsValidateService.validateAllFormFields(this.termConditionForm);\r\n    } else {\r\n      this.route.navigate(['/getting-setup/banks']);\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"align-center setup-section termcond\">\r\n  <figure><img alt=\"test-img\" src=\"{{'images/test.png' | assetsPath}}\"></figure>\r\n  <h5><strong>Terms and Conditions</strong></h5>\r\n  <h6>mmob collects your data to provide you with a more personal way to improve your finances- more bills to\r\n    investments</h6>\r\n  <form [formGroup]=\"termConditionForm\">\r\n    <div class=\"setup-box\">\r\n      <ul class=\"terms-points\">\r\n        <li><i><img src=\"{{'images/share-icon.png' | assetsPath}}\"></i>\r\n          <p>We only share your data with people you ask us to</p>\r\n        </li>\r\n        <li><i><img src=\"{{'images/protection-icon.png' | assetsPath}}\"></i>\r\n          <p>You are protected by the FSCS(Financial Services Compensation Scheme)</p>\r\n        </li>\r\n        <li><i><img src=\"{{'images/change-preference-icon.png' | assetsPath}}\"></i>\r\n          <p>You can change your sharing preferences at any time</p>\r\n        </li>\r\n      </ul>\r\n      <div class=\"read-doc\">\r\n        <p><a  (click)=\"onNext()\">Read full T&Cs</a></p>\r\n        <p><a  (click)=\"onNextprivacy()\">Read full Privacy policy</a></p>\r\n      </div>\r\n      <div class=\"check-box\">\r\n        <input formControlName=\"age\" id=\"html\" type=\"checkbox\">\r\n        <label for=\"html\">I am over 18 years old</label>\r\n        <p><app-show-errors [control]=\"termConditionForm.controls.age\"></app-show-errors></p>\r\n      </div>\r\n      <div class=\"check-box\">\r\n        <input formControlName=\"termAndCondition\" id=\"css\" type=\"checkbox\">\r\n        <label for=\"css\">Accept T&Cs</label>\r\n        <p><app-show-errors [control]=\"termConditionForm.controls.termAndCondition\"></app-show-errors></p>\r\n      </div>\r\n      <input (click)=\"continue()\" class=\"next-btn\" type=\"button\" value=\"Continue\">\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AssetsPathPipe } from 'src/app/shared/pipes/assets-path.pipe';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { FieldsValidateService } from 'src/app/service/fields-validate.service';\r\nimport { Router } from '@angular/router';\r\nimport { NavigationUrl } from 'src/app/shared/constant/navigation-url.constant';\r\nimport { Constant } from 'src/app/shared/constant/constant';\r\n\r\n\r\n@Component({\r\n  selector: 'app-request-bank-data',\r\n  templateUrl: './request-bank-data.component.html',\r\n  styleUrls: ['./request-bank-data.component.css']\r\n})\r\nexport class RequestBankDataComponent implements OnInit {\r\n  requestBankDataForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  selectedBank;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router) {\r\n    this.selectedBank = localStorage.getItem(Constant.BANK_NAME);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.requestBankDataForm = this.formBuilder.group({\r\n      // age: ['', Validators.required],\r\n      // termAndCondition: ['', Validators.required],\r\n    });\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onDecline() {\r\n    this.route.navigate(['/getting-setup/banks']);\r\n    localStorage.removeItem(Constant.BANK_NAME);\r\n  }\r\n  onConfirm() {\r\n    this.route.navigate(['login']);\r\n  }\r\n}\r\n","<div class=\"main\">\r\n  <div class=\"wrapper\">\r\n    <form [formGroup]=\"requestBankDataForm\">\r\n      <div class=\"data-request\">\r\n        <figure><img alt=\"presentation image\" src=\"{{'images/presentation.png' | assetsPath}}\"></figure>\r\n        <h5><strong>Request data from {{selectedBank}}</strong></h5><br>\r\n        <p>mmob will request the following information from your bank:</p>\r\n        <div class=\"consent-boxes\">\r\n          <div class=\"accordion\" id=\"accordionExample\">\r\n            <div class=\"card\">\r\n              <div class=\"card-header\">\r\n                <h2 class=\"mb-0\">\r\n                  <button aria-controls=\"collapseOne\" aria-expanded=\"true\" class=\"btn btn-link btn-block text-left collapsed\"\r\n                          data-target=\"#collapseOne\" data-toggle=\"collapse\" type=\"button\">\r\n                    Your Account Details\r\n                  </button>\r\n                </h2>\r\n              </div>\r\n              <div aria-labelledby=\"headingOne\" class=\"collapse\" data-parent=\"#accordionExample\" id=\"collapseOne\">\r\n                <div class=\"card-body\">\r\n                  <ul>\r\n                    <li>&#8722; Any another names by which you refer to this account</li>\r\n                    <li>&#8722; Your account balance</li>\r\n                    <li>&#8722; Your account name, number and sort-code</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card\">\r\n              <div class=\"card-header\">\r\n                <h2 class=\"mb-0\">\r\n                  <button aria-controls=\"collapseTwo\" aria-expanded=\"true\" class=\"btn btn-link btn-block text-left collapsed\"\r\n                          data-target=\"#collapseTwo\" data-toggle=\"collapse\" type=\"button\">\r\n                    Your Regular Payments\r\n                  </button>\r\n                </h2>\r\n              </div>\r\n              <div aria-labelledby=\"headingTwo\" class=\"collapse\" data-parent=\"#accordionExample\" id=\"collapseTwo\">\r\n                <div class=\"card-body\">\r\n                  <ul>\r\n                    <li>&#8722; Your standing orders</li>\r\n                    <li>&#8722; Details of your standing orders</li>\r\n                    <li>&#8722; Recurring and future dated payments</li>\r\n                    <li>&#8722; Details of recurring and future dated payments</li>\r\n                    <li>&#8722; Payee agreements you have set up</li>\r\n                    <li>&#8722; Details of payee agreements you have set up</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card\">\r\n              <div class=\"card-header\">\r\n                <h2 class=\"mb-0\">\r\n                  <button aria-controls=\"collapseThree\" aria-expanded=\"true\" class=\"btn btn-link btn-block text-left collapsed\"\r\n                          data-target=\"#collapseThree\" data-toggle=\"collapse\" type=\"button\">\r\n                    Your Transaction Details\r\n                  </button>\r\n                </h2>\r\n              </div>\r\n              <div aria-labelledby=\"headingThree\" class=\"collapse\" data-parent=\"#accordionExample\" id=\"collapseThree\">\r\n                <div class=\"card-body\">\r\n                  <ul>\r\n                    <li>&#8722; Your transactions</li>\r\n                    <li>&#8722; Details of your transactions</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card\">\r\n              <div class=\"card-header\">\r\n                <h2 class=\"mb-0\">\r\n                  <button aria-controls=\"collapseFour\" aria-expanded=\"true\" class=\"btn btn-link btn-block text-left collapsed\"\r\n                          data-target=\"#collapseFour\" data-toggle=\"collapse\" type=\"button\">\r\n                    Your Contact Details\r\n                  </button>\r\n                </h2>\r\n              </div>\r\n              <div aria-labelledby=\"headingFour\" class=\"collapse\" data-parent=\"#accordionExample\" id=\"collapseFour\">\r\n                <div class=\"card-body\">\r\n                  <ul>\r\n                    <li>&#8722; The full legal name(s) of account holder(s)</li>\r\n                    <li>&#8722; Address(es), telephone number(s) and email address(es)</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row justify-content-around text-center\">\r\n          <div class=\"col-md-4 my-3\">\r\n            <h5><strong>Our Access</strong></h5><br>\r\n            <p>mmob will have access to this data for 90 days</p>\r\n            <p>mmob will access this data on a recurring basis</p>\r\n          </div>\r\n          <div class=\"col-md-4 my-3\">\r\n            <h5><strong>What We Will Do</strong></h5><br>\r\n            <p>mmob will access 12 months worth of historical data</p>\r\n            <p>mmob will use this data to provide you a more personalisaed service</p>\r\n          </div>\r\n          <div class=\"col-12 my-3\">\r\n            <p>information accessed by mmob from your account may be shared with third party providers on the market\r\n              place.<br>mmob will always ask for your prior consent before sharing data with a third party on the market\r\n              place</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row justify-content-around text-center\">\r\n          <div class=\"col-10 col-md-4\">\r\n            <button (click)=\"onConfirm()\" class=\"btn confirm-btn\" data-target=\"#allow\" data-toggle=\"modal\"\r\n                    type=\"button\">Confirm\r\n            </button>\r\n          </div>\r\n          <div class=\"col-10 col-md-4\">\r\n            <button (click)=\"onDecline()\" class=\"btn decline-btn\" type=\"button\">Decline</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AssetsPathPipe} from 'src/app/shared/pipes/assets-path.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {FieldsValidateService} from 'src/app/service/fields-validate.service';\r\nimport {Router} from '@angular/router';\r\nimport {NavigationUrl} from 'src/app/shared/constant/navigation-url.constant';\r\n\r\n@Component({\r\n  selector: 'app-two-factor-authentication',\r\n  templateUrl: './two-factor-authentication.component.html',\r\n  styleUrls: ['./two-factor-authentication.component.css']\r\n})\r\nexport class TwoFactorAuthenticationComponent implements OnInit {\r\n  twoFactorForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.twoFactorForm = this.formBuilder.group({\r\n      twoFactorPassword: ['', Validators.required],\r\n    });\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    if (this.twoFactorForm.invalid) {\r\n      return this.fieldsValidateService.validateAllFormFields(this.twoFactorForm);\r\n    } else {\r\n      this.route.navigate(['/getting-setup/terms-and-conditions']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"align-center setup-section\">\r\n  <figure><img alt=\"authentication-img\" src=\"{{'images/authentication.png' | assetsPath}}\"></figure>\r\n  <h5><strong>Two Factor Authentication</strong></h5>\r\n  <div class=\"setup-box\">\r\n    <p>Please enter the verfication code that has been <span>sent to your device registered with your mmob\r\n        account.</span></p>\r\n    <form [formGroup]=\"twoFactorForm\">\r\n      <div class=\"form-group\">\r\n        <input class=\"form-control\" formControlName=\"twoFactorPassword\" type=\"password\">\r\n        <app-show-errors [control]=\"twoFactorForm.controls.twoFactorPassword\"></app-show-errors>\r\n      </div>\r\n      <input (click)=\"onNext()\" class=\"next-btn\" type=\"button\" value=\"Confirm \">\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AssetsPathPipe } from 'src/app/shared/pipes/assets-path.pipe';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { FieldsValidateService } from 'src/app/service/fields-validate.service';\r\nimport { Router } from '@angular/router';\r\nimport { NavigationUrl } from 'src/app/shared/constant/navigation-url.constant';\r\nimport { LocalDataService } from 'src/app/core/services/local-data.service';\r\nimport { Constant } from 'src/app/shared/constant/constant';\r\n\r\n@Component({\r\n  selector: 'app-banks',\r\n  templateUrl: './banks.component.html',\r\n  styleUrls: ['./banks.component.css']\r\n})\r\nexport class BanksComponent implements OnInit {\r\n  banksDetailForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  banksArray = [];\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router,\r\n    private localDataService: LocalDataService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n    this.banksArray = this.localDataService.getALlBanks();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.banksDetailForm = this.formBuilder.group({});\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    this.route.navigate(['/getting-setup/request-bank-data']);\r\n  }\r\n  setBankName(name) {\r\n    window.localStorage[Constant.BANK_NAME] = name;\r\n  }\r\n}\r\n","<div class=\"align-center setup-section\">\r\n\r\n  <div class=\"account-table\">\r\n    <table class=\"table\">\r\n      <tbody>\r\n        <tr *ngFor=\"let bank of banksArray\">\r\n          <td>\r\n            <figure><img [src]=\"bank.image\" alt=\"hsbc-icon\"></figure>\r\n          </td>\r\n          <td>\r\n            <h3>{{bank.name}}</h3>\r\n          </td>\r\n          <td><a [routerLink]=\"'/getting-setup/request-bank-data'\" (click)=\"setBankName(bank.name)\">></a></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div class=\"setup-box\">\r\n    <form [formGroup]=\"banksDetailForm\">\r\n      <input (click)=\"onNext()\" class=\"next-btn\" href=\"#\" type=\"button\" value=\"Skip for now\">\r\n    </form>\r\n  </div>\r\n</div>","import {Component, OnInit} from '@angular/core';\r\nimport {AssetsPathPipe} from 'src/app/shared/pipes/assets-path.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {FieldsValidateService} from 'src/app/service/fields-validate.service';\r\nimport {Router} from '@angular/router';\r\nimport {NavigationUrl} from 'src/app/shared/constant/navigation-url.constant';\r\nimport {CustomValidators} from 'src/app/shared/validators/custom-validators';\r\nimport {ConfirmationPopupComponent} from 'src/app/shared/confirmation-popup/confirmation-popup.component';\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {Constant} from 'src/app/shared/constant/constant';\r\n\r\n@Component({\r\n  selector: 'app-email',\r\n  templateUrl: './email.component.html',\r\n  styleUrls: ['./email.component.css']\r\n})\r\nexport class EmailComponent implements OnInit {\r\n  emailForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router,\r\n    private modalService: NgbModal) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.emailForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, CustomValidators.emailCustomValidation]],\r\n    });\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    if (this.emailForm.invalid) {\r\n      return this.fieldsValidateService.validateAllFormFields(this.emailForm);\r\n    } else {\r\n      this.commonAlertPopUp();\r\n    }\r\n  }\r\n\r\n  commonAlertPopUp() {\r\n    const modal = this.showPopup();\r\n    modal.componentInstance.confirmText = Constant.EMAIL_CONFIRM_TEXT;\r\n    modal.componentInstance.firstButtonText = Constant.EMAIL_FIRST_BUTTON_TEXT;\r\n    modal.componentInstance.secondButtonText = Constant.EMAIL_SECOND_BUTTON_TEXT;\r\n    modal.result.then((data) => {\r\n      if (data.isYesPressed) {\r\n        this.route.navigate(['/getting-setup/password']);\r\n      }\r\n    });\r\n  }\r\n  showPopup() {\r\n    return this.modalService.open(ConfirmationPopupComponent, ConfirmationPopupComponent.POP_UP_DEFAULT_PROPS);\r\n  }\r\n}\r\n","<div class=\"align-center setup-section\">\r\n  <figure><img alt=\"pass-img\" src=\"{{'images/email.png' | assetsPath}}\"></figure>\r\n  <h5><strong>What's your e-mail address?</strong></h5>\r\n  <div class=\"setup-box\">\r\n    <p>To create your account not to send you spam (we promise!)</p>\r\n    <form [formGroup]=\"emailForm\">\r\n      <div class=\"form-group\">\r\n        <i *ngIf=\"emailForm.controls.email.valid\"><img alt=\"tick-icon\"\r\n                                                       src=\"{{'images/tick-icon.png' | assetsPath}}\"></i>\r\n        <input class=\"form-control\" formControlName=\"email\" type=\"text\">\r\n        <app-show-errors [control]=\"emailForm.controls.email\"></app-show-errors>\r\n      </div>\r\n      <input (click)=\"onNext()\" class=\"next-btn\" type=\"button\" value=\"Continue\">\r\n    </form>\r\n  </div>\r\n</div>"],"sourceRoot":"webpack:///"}