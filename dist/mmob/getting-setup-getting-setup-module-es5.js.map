{"version":3,"sources":["webpack:///src/app/getting-setup/name/name.component.ts","webpack:///src/app/getting-setup/name/name.component.html","webpack:///src/app/getting-setup/mobile/mobile.component.ts","webpack:///src/app/getting-setup/mobile/mobile.component.html","webpack:///src/app/getting-setup/getting-setup.module.ts","webpack:///src/app/getting-setup/password/password.component.ts","webpack:///src/app/getting-setup/password/password.component.html","webpack:///src/app/getting-setup/getting-setup-routing.module.ts","webpack:///src/app/getting-setup/terms-and-conditions/terms-and-conditions.component.ts","webpack:///src/app/getting-setup/terms-and-conditions/terms-and-conditions.component.html","webpack:///src/app/getting-setup/request-bank-data/request-bank-data.component.ts","webpack:///src/app/getting-setup/request-bank-data/request-bank-data.component.html","webpack:///src/app/getting-setup/two-factor-authentication/two-factor-authentication.component.ts","webpack:///src/app/getting-setup/two-factor-authentication/two-factor-authentication.component.html","webpack:///src/app/getting-setup/banks/banks.component.ts","webpack:///src/app/getting-setup/banks/banks.component.html","webpack:///src/app/getting-setup/email/email.component.ts","webpack:///src/app/getting-setup/email/email.component.html"],"names":["NameComponent","assetsPipe","formBuilder","fieldsValidateService","route","navigationUrl","initializeForm","nameForm","group","name","required","invalid","validateAllFormFields","navigate","onNext","selector","templateUrl","styleUrls","MobileComponent","mobileForm","mobile","GettingSetupModule","declarations","imports","PasswordComponent","passwordForm","password","compose","patternValidator","hasNumber","hasCapitalCase","hasSmallCase","hasSpecialCharacters","minLength","routes","path","component","GETTING_SETUP_EMAIL","GETTING_SETUP_PASSWORD","GETTING_SETUP_MOBILE","GETTING_SETUP_TWO_FACTOR_AUTHENTICATION","GETTING_SETUP_TREMS_AND_CONDITION","GETTING_SETUP_BANKS","GETTING_SETUP_REQUEST_BANK_DATA","GettingSetupRoutingModule","forChild","exports","TermsAndConditionsComponent","modalService","termConditionForm","age","termAndCondition","open","backdrop","keyboard","scrollable","showPopUp","alert","onNextprivacy","RequestBankDataComponent","selectedBank","localStorage","getItem","BANK_NAME","requestBankDataForm","removeItem","onConfirm","onDecline","TwoFactorAuthenticationComponent","twoFactorForm","twoFactorPassword","BanksComponent","localDataService","banksArray","getALlBanks","banksDetailForm","window","EmailComponent","emailForm","email","emailCustomValidation","commonAlertPopUp","modal","showPopup","componentInstance","confirmText","EMAIL_CONFIRM_TEXT","firstButtonText","EMAIL_FIRST_BUTTON_TEXT","secondButtonText","EMAIL_SECOND_BUTTON_TEXT","result","then","data","isYesPressed","POP_UP_DEFAULT_PROPS"],"mappings":"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","file":"getting-setup-getting-setup-module-es5.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {AssetsPathPipe} from 'src/app/shared/pipes/assets-path.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {FieldsValidateService} from 'src/app/service/fields-validate.service';\r\nimport {Router} from '@angular/router';\r\nimport {NavigationUrl} from 'src/app/shared/constant/navigation-url.constant';\r\n\r\n@Component({\r\n  selector: 'app-name',\r\n  templateUrl: './name.component.html',\r\n  styleUrls: ['./name.component.css']\r\n})\r\nexport class NameComponent implements OnInit {\r\n  nameForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.nameForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n    });\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    if (this.nameForm.invalid) {\r\n      return this.fieldsValidateService.validateAllFormFields(this.nameForm);\r\n    } else {\r\n      this.route.navigate(['/getting-setup/email']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"align-center setup-section\">\r\n  <figure><img alt=\"pass-img\" src=\"{{'images/pass.png' | assetsPath}}\"></figure>\r\n  <h5><strong>What's your name?</strong></h5>\r\n  <div class=\"setup-box\">\r\n    <p>This can be your real name, preferred name, nick name or alias- it doesn't need to match your ID.</p>\r\n    <form [formGroup]=\"nameForm\">\r\n      <div class=\"form-group\">\r\n        <i *ngIf=\"nameForm.controls.name.valid\"><img alt=\"tick-icon\"\r\n                                                     src=\"{{'images/tick-icon.png' | assetsPath}}\"></i>\r\n        <input class=\"form-control\" formControlName=\"name\" type=\"text\">\r\n        <app-show-errors [control]=\"nameForm.controls.name\"></app-show-errors>\r\n      </div>\r\n      <input (click)=\"onNext()\" class=\"next-btn\" href=\"#\" type=\"button\" value=\"Next\">\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AssetsPathPipe} from 'src/app/shared/pipes/assets-path.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {FieldsValidateService} from 'src/app/service/fields-validate.service';\r\nimport {Router} from '@angular/router';\r\nimport {NavigationUrl} from 'src/app/shared/constant/navigation-url.constant';\r\n\r\n@Component({\r\n  selector: 'app-mobile',\r\n  templateUrl: './mobile.component.html',\r\n  styleUrls: ['./mobile.component.css']\r\n})\r\nexport class MobileComponent implements OnInit {\r\n  mobileForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.mobileForm = this.formBuilder.group({\r\n      mobile: ['', Validators.required],\r\n    });\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    if (this.mobileForm.invalid) {\r\n      return this.fieldsValidateService.validateAllFormFields(this.mobileForm);\r\n    } else {\r\n      this.route.navigate(['/getting-setup/two-factor-authentication']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"align-center setup-section\">\r\n  <figure><img alt=\"kyc-img\" src=\"{{'images/kyc.png' | assetsPath}}\"></figure>\r\n  <h5><strong>Enter your Mobile Number</strong></h5>\r\n  <div class=\"setup-box\">\r\n    <p>Please enter your phone number for <span>two factor authentication.</span></p>\r\n    <form [formGroup]=\"mobileForm\">\r\n      <div class=\"form-group\">\r\n        <input class=\"form-control\" formControlName=\"mobile\" type=\"text\">\r\n        <app-show-errors [control]=\"mobileForm.controls.mobile\"></app-show-errors>\r\n      </div>\r\n      <input (click)=\"onNext()\" class=\"next-btn\" type=\"button\" value=\"Confirm\">\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {GettingSetupRoutingModule} from './getting-setup-routing.module';\r\nimport {NameComponent} from './name/name.component';\r\nimport {EmailComponent} from './email/email.component';\r\nimport {PasswordComponent} from './password/password.component';\r\nimport {MobileComponent} from './mobile/mobile.component';\r\nimport {TwoFactorAuthenticationComponent} from './two-factor-authentication/two-factor-authentication.component';\r\nimport {TermsAndConditionsComponent} from './terms-and-conditions/terms-and-conditions.component';\r\nimport {BanksComponent} from './banks/banks.component';\r\nimport {RequestBankDataComponent} from './request-bank-data/request-bank-data.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [NameComponent, EmailComponent, PasswordComponent, MobileComponent, TwoFactorAuthenticationComponent,\r\n    TermsAndConditionsComponent, BanksComponent, RequestBankDataComponent],\r\n  imports: [\r\n    GettingSetupRoutingModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class GettingSetupModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AssetsPathPipe} from 'src/app/shared/pipes/assets-path.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {FieldsValidateService} from 'src/app/service/fields-validate.service';\r\nimport {Router} from '@angular/router';\r\nimport {NavigationUrl} from 'src/app/shared/constant/navigation-url.constant';\r\nimport {CustomValidators} from 'src/app/shared/validators/custom-validators';\r\n\r\n@Component({\r\n  selector: 'app-password',\r\n  templateUrl: './password.component.html',\r\n  styleUrls: ['./password.component.css']\r\n})\r\nexport class PasswordComponent implements OnInit {\r\n  passwordForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.passwordForm = this.formBuilder.group({\r\n      password: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          // check whether the entered password has a number\r\n          CustomValidators.patternValidator(/\\d/, {\r\n            hasNumber: true\r\n          }),\r\n          // check whether the entered password has upper case letter\r\n          CustomValidators.patternValidator(/[A-Z]/, {\r\n            hasCapitalCase: true\r\n          }),\r\n          // check whether the entered password has a lower case letter\r\n          CustomValidators.patternValidator(/[a-z]/, {\r\n            hasSmallCase: true\r\n          }),\r\n          // check whether the entered password has a special character\r\n          CustomValidators.patternValidator(\r\n            /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/,\r\n            {\r\n              hasSpecialCharacters: true\r\n            }\r\n          ),\r\n          Validators.minLength(8)\r\n        ])\r\n      ],\r\n\r\n    });\r\n  }\r\n\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    if (this.passwordForm.invalid) {\r\n      return this.fieldsValidateService.validateAllFormFields(this.passwordForm);\r\n    } else {\r\n      this.route.navigate(['/getting-setup/mobile']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"align-center setup-section\">\r\n  <figure><img alt=\"pass-img\" src=\"{{'images/access.png' | assetsPath}}\"></figure>\r\n  <h5><strong>Choose a secure password</strong></h5>\r\n  <div class=\"setup-box\">\r\n    <form [formGroup]=\"passwordForm\">\r\n\r\n      <div class=\"form-group\">\r\n        <i><img alt=\"eye-icon\" src=\"{{'images/eye-icon.png' | assetsPath}}\"></i>\r\n        <input class=\"form-control\" formControlName=\"password\" type=\"password\">\r\n        <app-show-errors [control]=\"passwordForm.controls.password\"></app-show-errors>\r\n      </div>\r\n      <ul>\r\n        <li>Your password should include at least:</li>\r\n        <li\r\n            [ngClass]=\"passwordForm.controls['password'].hasError('required') || passwordForm.controls['password'].hasError('minlength')  ? '' : 'text-success'\">\r\n          <img src=\"{{'images/tick-bullet.jpg' | assetsPath}}\"> 8 character\r\n        </li>\r\n        <li\r\n            [ngClass]=\"passwordForm.controls['password'].hasError('required') || passwordForm.controls['password'].hasError('hasNumber')  ? '' : 'text-success'\">\r\n          <img src=\"{{'images/tick-bullet.jpg' | assetsPath}}\"> 1 number\r\n        </li>\r\n        <li\r\n            [ngClass]=\"passwordForm.controls['password'].hasError('required') || passwordForm.controls['password'].hasError('hasCapitalCase')  ? '' : 'text-success'\">\r\n          <img src=\"{{'images/tick-bullet.jpg' | assetsPath}}\"> 1 capital letter\r\n        </li>\r\n        <li\r\n            [ngClass]=\"passwordForm.controls['password'].hasError('required') || passwordForm.controls['password'].hasError('hasSpecialCharacters') ? '' : 'text-success'\">\r\n          <img src=\"{{'images/tick-bullet.jpg' | assetsPath}}\"> 1 special character (e.g. $@&%)\r\n        </li>\r\n      </ul>\r\n      <input (click)=\"onNext()\" class=\"next-btn\" type=\"button\" value=\"Continue\">\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NameComponent} from './name/name.component';\r\nimport {EmailComponent} from './email/email.component';\r\nimport {NavigationUrl} from 'src/app/shared/constant/navigation-url.constant';\r\nimport {PasswordComponent} from './password/password.component';\r\nimport {MobileComponent} from './mobile/mobile.component';\r\nimport {TwoFactorAuthenticationComponent} from './two-factor-authentication/two-factor-authentication.component';\r\nimport {TermsAndConditionsComponent} from './terms-and-conditions/terms-and-conditions.component';\r\nimport {BanksComponent} from './banks/banks.component';\r\nimport {RequestBankDataComponent} from './request-bank-data/request-bank-data.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: NameComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_EMAIL, component: EmailComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_PASSWORD, component: PasswordComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_MOBILE, component: MobileComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_TWO_FACTOR_AUTHENTICATION, component: TwoFactorAuthenticationComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_TREMS_AND_CONDITION, component: TermsAndConditionsComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_BANKS, component: BanksComponent},\r\n  {path: NavigationUrl.GETTING_SETUP_REQUEST_BANK_DATA, component: RequestBankDataComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GettingSetupRoutingModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AssetsPathPipe } from 'src/app/shared/pipes/assets-path.pipe';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { FieldsValidateService } from 'src/app/service/fields-validate.service';\r\nimport { Router } from '@angular/router';\r\nimport { NavigationUrl } from 'src/app/shared/constant/navigation-url.constant';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationPopupComponent } from 'src/app/shared/confirmation-popup/confirmation-popup.component';\r\nimport { Constant } from 'src/app/shared/constant/constant';\r\nimport { TermsConditionsComponent } from 'src/app/shared/terms-conditions/terms-conditions.component';\r\nimport { PrivacyComponent } from 'src/app/shared/privacy/privacy.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-terms-and-conditions',\r\n  templateUrl: './terms-and-conditions.component.html',\r\n  styleUrls: ['./terms-and-conditions.component.css']\r\n})\r\nexport class TermsAndConditionsComponent implements OnInit {\r\n  termConditionForm: FormGroup;\r\n  //Navigation Url Constants\r\n  navigationUrl = NavigationUrl;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router,\r\n    private modalService: NgbModal) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.termConditionForm = this.formBuilder.group({\r\n      age: [''],\r\n      termAndCondition: [''],\r\n    });\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    return this.modalService.open(PrivacyComponent, { backdrop: 'static', keyboard: false,scrollable: true });\r\n  }\r\n  showPopUp() {\r\n    return this.modalService.open(TermsConditionsComponent, { backdrop: 'static', keyboard: false,scrollable: true });\r\n\r\n  }\r\n  onNextprivacy() {\r\n    this.showPopUp();\r\n  }\r\n  continue() {\r\n    if (this.termConditionForm.invalid) {\r\n       alert(\"Both check boxes are required\");\r\n      return this.fieldsValidateService.validateAllFormFields(this.termConditionForm);\r\n    } else {\r\n      this.route.navigate(['/getting-setup/banks']);\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"align-center setup-section termcond\">\r\n  <figure><img alt=\"test-img\" src=\"{{'images/test.png' | assetsPath}}\"></figure>\r\n  <h5><strong>Terms and Conditions</strong></h5>\r\n  <h6>mmob collects your data to provide you with a more personal way to improve your finances- more bills to\r\n    investments</h6>\r\n  <form [formGroup]=\"termConditionForm\">\r\n    <div class=\"setup-box\">\r\n      <ul class=\"terms-points\">\r\n        <li><i><img src=\"{{'images/share-icon.png' | assetsPath}}\"></i>\r\n          <p>We only share your data with people you ask us to</p>\r\n        </li>\r\n        <li><i><img src=\"{{'images/protection-icon.png' | assetsPath}}\"></i>\r\n          <p>You are protected by the FSCS(Financial Services Compensation Scheme)</p>\r\n        </li>\r\n        <li><i><img src=\"{{'images/change-preference-icon.png' | assetsPath}}\"></i>\r\n          <p>You can change your sharing preferences at any time</p>\r\n        </li>\r\n      </ul>\r\n      <div class=\"read-doc\">\r\n        <p><a  (click)=\"onNext()\">Read full T&Cs</a></p>\r\n        <p><a  (click)=\"onNextprivacy()\">Read full Privacy policy</a></p>\r\n      </div>\r\n      <div class=\"check-box\">\r\n        <input formControlName=\"age\" id=\"html\" type=\"checkbox\">\r\n        <label for=\"html\">I am over 18 years old</label>\r\n        <p><app-show-errors [control]=\"termConditionForm.controls.age\"></app-show-errors></p>\r\n      </div>\r\n      <div class=\"check-box\">\r\n        <input formControlName=\"termAndCondition\" id=\"css\" type=\"checkbox\">\r\n        <label for=\"css\">Accept T&Cs</label>\r\n        <p><app-show-errors [control]=\"termConditionForm.controls.termAndCondition\"></app-show-errors></p>\r\n      </div>\r\n      <input (click)=\"continue()\" class=\"next-btn\" type=\"button\" value=\"Continue\">\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AssetsPathPipe } from 'src/app/shared/pipes/assets-path.pipe';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { FieldsValidateService } from 'src/app/service/fields-validate.service';\r\nimport { Router } from '@angular/router';\r\nimport { NavigationUrl } from 'src/app/shared/constant/navigation-url.constant';\r\nimport { Constant } from 'src/app/shared/constant/constant';\r\n\r\n\r\n@Component({\r\n  selector: 'app-request-bank-data',\r\n  templateUrl: './request-bank-data.component.html',\r\n  styleUrls: ['./request-bank-data.component.css']\r\n})\r\nexport class RequestBankDataComponent implements OnInit {\r\n  requestBankDataForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  selectedBank;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router) {\r\n    this.selectedBank = localStorage.getItem(Constant.BANK_NAME);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.requestBankDataForm = this.formBuilder.group({\r\n      // age: ['', Validators.required],\r\n      // termAndCondition: ['', Validators.required],\r\n    });\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onDecline() {\r\n    this.route.navigate(['/getting-setup/banks']);\r\n    localStorage.removeItem(Constant.BANK_NAME);\r\n  }\r\n  onConfirm() {\r\n    this.route.navigate(['login']);\r\n  }\r\n}\r\n","<div class=\"main\">\r\n  <div class=\"wrapper\">\r\n    <form [formGroup]=\"requestBankDataForm\">\r\n      <div class=\"data-request\">\r\n        <figure><img alt=\"presentation image\" src=\"{{'images/presentation.png' | assetsPath}}\"></figure>\r\n        <h5><strong>Request data from {{selectedBank}}</strong></h5><br>\r\n        <p>mmob will request the following information from your bank:</p>\r\n        <div class=\"consent-boxes\">\r\n          <div class=\"accordion\" id=\"accordionExample\">\r\n            <div class=\"card\">\r\n              <div class=\"card-header\">\r\n                <h2 class=\"mb-0\">\r\n                  <button aria-controls=\"collapseOne\" aria-expanded=\"true\" class=\"btn btn-link btn-block text-left collapsed\"\r\n                          data-target=\"#collapseOne\" data-toggle=\"collapse\" type=\"button\">\r\n                    Your Account Details\r\n                  </button>\r\n                </h2>\r\n              </div>\r\n              <div aria-labelledby=\"headingOne\" class=\"collapse\" data-parent=\"#accordionExample\" id=\"collapseOne\">\r\n                <div class=\"card-body\">\r\n                  <ul>\r\n                    <li>&#8722; Any another names by which you refer to this account</li>\r\n                    <li>&#8722; Your account balance</li>\r\n                    <li>&#8722; Your account name, number and sort-code</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card\">\r\n              <div class=\"card-header\">\r\n                <h2 class=\"mb-0\">\r\n                  <button aria-controls=\"collapseTwo\" aria-expanded=\"true\" class=\"btn btn-link btn-block text-left collapsed\"\r\n                          data-target=\"#collapseTwo\" data-toggle=\"collapse\" type=\"button\">\r\n                    Your Regular Payments\r\n                  </button>\r\n                </h2>\r\n              </div>\r\n              <div aria-labelledby=\"headingTwo\" class=\"collapse\" data-parent=\"#accordionExample\" id=\"collapseTwo\">\r\n                <div class=\"card-body\">\r\n                  <ul>\r\n                    <li>&#8722; Your standing orders</li>\r\n                    <li>&#8722; Details of your standing orders</li>\r\n                    <li>&#8722; Recurring and future dated payments</li>\r\n                    <li>&#8722; Details of recurring and future dated payments</li>\r\n                    <li>&#8722; Payee agreements you have set up</li>\r\n                    <li>&#8722; Details of payee agreements you have set up</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card\">\r\n              <div class=\"card-header\">\r\n                <h2 class=\"mb-0\">\r\n                  <button aria-controls=\"collapseThree\" aria-expanded=\"true\" class=\"btn btn-link btn-block text-left collapsed\"\r\n                          data-target=\"#collapseThree\" data-toggle=\"collapse\" type=\"button\">\r\n                    Your Transaction Details\r\n                  </button>\r\n                </h2>\r\n              </div>\r\n              <div aria-labelledby=\"headingThree\" class=\"collapse\" data-parent=\"#accordionExample\" id=\"collapseThree\">\r\n                <div class=\"card-body\">\r\n                  <ul>\r\n                    <li>&#8722; Your transactions</li>\r\n                    <li>&#8722; Details of your transactions</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card\">\r\n              <div class=\"card-header\">\r\n                <h2 class=\"mb-0\">\r\n                  <button aria-controls=\"collapseFour\" aria-expanded=\"true\" class=\"btn btn-link btn-block text-left collapsed\"\r\n                          data-target=\"#collapseFour\" data-toggle=\"collapse\" type=\"button\">\r\n                    Your Contact Details\r\n                  </button>\r\n                </h2>\r\n              </div>\r\n              <div aria-labelledby=\"headingFour\" class=\"collapse\" data-parent=\"#accordionExample\" id=\"collapseFour\">\r\n                <div class=\"card-body\">\r\n                  <ul>\r\n                    <li>&#8722; The full legal name(s) of account holder(s)</li>\r\n                    <li>&#8722; Address(es), telephone number(s) and email address(es)</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row justify-content-around text-center\">\r\n          <div class=\"col-md-4 my-3\">\r\n            <h5><strong>Our Access</strong></h5><br>\r\n            <p>mmob will have access to this data for 90 days</p>\r\n            <p>mmob will access this data on a recurring basis</p>\r\n          </div>\r\n          <div class=\"col-md-4 my-3\">\r\n            <h5><strong>What We Will Do</strong></h5><br>\r\n            <p>mmob will access 12 months worth of historical data</p>\r\n            <p>mmob will use this data to provide you a more personalisaed service</p>\r\n          </div>\r\n          <div class=\"col-12 my-3\">\r\n            <p>information accessed by mmob from your account may be shared with third party providers on the market\r\n              place.<br>mmob will always ask for your prior consent before sharing data with a third party on the market\r\n              place</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row justify-content-around text-center\">\r\n          <div class=\"col-10 col-md-4\">\r\n            <button (click)=\"onConfirm()\" class=\"btn confirm-btn\" data-target=\"#allow\" data-toggle=\"modal\"\r\n                    type=\"button\">Confirm\r\n            </button>\r\n          </div>\r\n          <div class=\"col-10 col-md-4\">\r\n            <button (click)=\"onDecline()\" class=\"btn decline-btn\" type=\"button\">Decline</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AssetsPathPipe} from 'src/app/shared/pipes/assets-path.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {FieldsValidateService} from 'src/app/service/fields-validate.service';\r\nimport {Router} from '@angular/router';\r\nimport {NavigationUrl} from 'src/app/shared/constant/navigation-url.constant';\r\n\r\n@Component({\r\n  selector: 'app-two-factor-authentication',\r\n  templateUrl: './two-factor-authentication.component.html',\r\n  styleUrls: ['./two-factor-authentication.component.css']\r\n})\r\nexport class TwoFactorAuthenticationComponent implements OnInit {\r\n  twoFactorForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.twoFactorForm = this.formBuilder.group({\r\n      twoFactorPassword: ['', Validators.required],\r\n    });\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    if (this.twoFactorForm.invalid) {\r\n      return this.fieldsValidateService.validateAllFormFields(this.twoFactorForm);\r\n    } else {\r\n      this.route.navigate(['/getting-setup/terms-and-conditions']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"align-center setup-section\">\r\n  <figure><img alt=\"authentication-img\" src=\"{{'images/authentication.png' | assetsPath}}\"></figure>\r\n  <h5><strong>Two Factor Authentication</strong></h5>\r\n  <div class=\"setup-box\">\r\n    <p>Please enter the verfication code that has been <span>sent to your device registered with your mmob\r\n        account.</span></p>\r\n    <form [formGroup]=\"twoFactorForm\">\r\n      <div class=\"form-group\">\r\n        <input class=\"form-control\" formControlName=\"twoFactorPassword\" type=\"password\">\r\n        <app-show-errors [control]=\"twoFactorForm.controls.twoFactorPassword\"></app-show-errors>\r\n      </div>\r\n      <input (click)=\"onNext()\" class=\"next-btn\" type=\"button\" value=\"Confirm \">\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AssetsPathPipe } from 'src/app/shared/pipes/assets-path.pipe';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { FieldsValidateService } from 'src/app/service/fields-validate.service';\r\nimport { Router } from '@angular/router';\r\nimport { NavigationUrl } from 'src/app/shared/constant/navigation-url.constant';\r\nimport { LocalDataService } from 'src/app/core/services/local-data.service';\r\nimport { Constant } from 'src/app/shared/constant/constant';\r\n\r\n@Component({\r\n  selector: 'app-banks',\r\n  templateUrl: './banks.component.html',\r\n  styleUrls: ['./banks.component.css']\r\n})\r\nexport class BanksComponent implements OnInit {\r\n  banksDetailForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  banksArray = [];\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router,\r\n    private localDataService: LocalDataService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n    this.banksArray = this.localDataService.getALlBanks();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.banksDetailForm = this.formBuilder.group({});\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    this.route.navigate(['/getting-setup/request-bank-data']);\r\n  }\r\n  setBankName(name) {\r\n    window.localStorage[Constant.BANK_NAME] = name;\r\n  }\r\n}\r\n","<div class=\"align-center setup-section\">\r\n\r\n  <div class=\"account-table\">\r\n    <table class=\"table\">\r\n      <tbody>\r\n        <tr *ngFor=\"let bank of banksArray\">\r\n          <td>\r\n            <figure><img [src]=\"bank.image\" alt=\"hsbc-icon\"></figure>\r\n          </td>\r\n          <td>\r\n            <h3>{{bank.name}}</h3>\r\n          </td>\r\n          <td><a [routerLink]=\"'/getting-setup/request-bank-data'\" (click)=\"setBankName(bank.name)\">></a></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div class=\"setup-box\">\r\n    <form [formGroup]=\"banksDetailForm\">\r\n      <input (click)=\"onNext()\" class=\"next-btn\" href=\"#\" type=\"button\" value=\"Skip for now\">\r\n    </form>\r\n  </div>\r\n</div>","import {Component, OnInit} from '@angular/core';\r\nimport {AssetsPathPipe} from 'src/app/shared/pipes/assets-path.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {FieldsValidateService} from 'src/app/service/fields-validate.service';\r\nimport {Router} from '@angular/router';\r\nimport {NavigationUrl} from 'src/app/shared/constant/navigation-url.constant';\r\nimport {CustomValidators} from 'src/app/shared/validators/custom-validators';\r\nimport {ConfirmationPopupComponent} from 'src/app/shared/confirmation-popup/confirmation-popup.component';\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {Constant} from 'src/app/shared/constant/constant';\r\n\r\n@Component({\r\n  selector: 'app-email',\r\n  templateUrl: './email.component.html',\r\n  styleUrls: ['./email.component.css']\r\n})\r\nexport class EmailComponent implements OnInit {\r\n  emailForm: FormGroup;\r\n  //Navigation Url Constanst\r\n  navigationUrl = NavigationUrl;\r\n  constructor(\r\n    private assetsPipe: AssetsPathPipe,\r\n    private formBuilder: FormBuilder,\r\n    private fieldsValidateService: FieldsValidateService,\r\n    private route: Router,\r\n    private modalService: NgbModal) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  /**\r\n   *  This function will used to Prepare Form Fields.\r\n   */\r\n  initializeForm() {\r\n    this.emailForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, CustomValidators.emailCustomValidation]],\r\n    });\r\n  }\r\n  //this function validate form and redirect to next step\r\n  onNext() {\r\n    if (this.emailForm.invalid) {\r\n      return this.fieldsValidateService.validateAllFormFields(this.emailForm);\r\n    } else {\r\n      this.commonAlertPopUp();\r\n    }\r\n  }\r\n\r\n  commonAlertPopUp() {\r\n    const modal = this.showPopup();\r\n    modal.componentInstance.confirmText = Constant.EMAIL_CONFIRM_TEXT;\r\n    modal.componentInstance.firstButtonText = Constant.EMAIL_FIRST_BUTTON_TEXT;\r\n    modal.componentInstance.secondButtonText = Constant.EMAIL_SECOND_BUTTON_TEXT;\r\n    modal.result.then((data) => {\r\n      if (data.isYesPressed) {\r\n        this.route.navigate(['/getting-setup/password']);\r\n      }\r\n    });\r\n  }\r\n  showPopup() {\r\n    return this.modalService.open(ConfirmationPopupComponent, ConfirmationPopupComponent.POP_UP_DEFAULT_PROPS);\r\n  }\r\n}\r\n","<div class=\"align-center setup-section\">\r\n  <figure><img alt=\"pass-img\" src=\"{{'images/email.png' | assetsPath}}\"></figure>\r\n  <h5><strong>What's your e-mail address?</strong></h5>\r\n  <div class=\"setup-box\">\r\n    <p>To create your account not to send you spam (we promise!)</p>\r\n    <form [formGroup]=\"emailForm\">\r\n      <div class=\"form-group\">\r\n        <i *ngIf=\"emailForm.controls.email.valid\"><img alt=\"tick-icon\"\r\n                                                       src=\"{{'images/tick-icon.png' | assetsPath}}\"></i>\r\n        <input class=\"form-control\" formControlName=\"email\" type=\"text\">\r\n        <app-show-errors [control]=\"emailForm.controls.email\"></app-show-errors>\r\n      </div>\r\n      <input (click)=\"onNext()\" class=\"next-btn\" type=\"button\" value=\"Continue\">\r\n    </form>\r\n  </div>\r\n</div>"]}