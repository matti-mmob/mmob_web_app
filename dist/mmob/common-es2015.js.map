{"version":3,"sources":["./src/app/layout/layout.module.ts","./src/app/shared/constant/storage-constants.ts","./src/app/shared/validators/custom-validators.ts","./src/app/shared/services/helper-services/common.service.ts","./src/app/service/fields-validate.service.ts","./src/app/core/services/local-data.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {HeaderComponent} from './header/header.component';\r\nimport {FooterComponent} from './footer/footer.component';\r\nimport {SidebarComponent} from './sidebar/sidebar.component';\r\nimport {MainContentComponent} from './main-content/main-content.component';\r\nimport {RouterModule} from '@angular/router';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {NgxSpinnerModule} from 'ngx-spinner';\r\n\r\n@NgModule({\r\n  declarations: [HeaderComponent, FooterComponent, SidebarComponent, MainContentComponent],\r\n  imports: [RouterModule, SharedModule, NgxSpinnerModule],\r\n  exports: [HeaderComponent, FooterComponent, SidebarComponent, MainContentComponent],\r\n})\r\nexport class LayoutModule {\r\n}\r\n","export class StorageConstants {\r\n  static X_ACCESS_TOKEN = 'CognitoIdentityServiceProvider.1nrc8h2siugvjpeum0ggtj58ub.a6b76817-74a5-467b-8467-30c483b8e78c.accessToken';\r\n  static X_EMAIL = 'X_EMAIL';\r\n}\r\n","import {AbstractControl, FormControl, ValidationErrors, ValidatorFn} from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n\r\n  static emailCustomValidation(c: FormControl): ValidationErrors {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (c.value !== null && c.value !== '') {\r\n      const numbers = /^[0-9]+$/;\r\n      if (re.test(String(c.value).toLowerCase())) {\r\n        return null;\r\n      } else {\r\n        return {validateEmail: true};\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static passwordCustomValidation(c: FormControl): ValidationErrors {\r\n\r\n    var re = /(?=^.{8,100}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s)[0-9a-zA-Z!@#$%^&*()]*$/;\r\n    if (c.value !== null && c.value !== '') {\r\n      const numbers = /^[0-9]+$/;\r\n      if (re.test(String(c.value))) {\r\n        return null;\r\n      } else {\r\n        return {validatePassword: true};\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n      if (!control.value) {\r\n        // if control is empty return no error\r\n        return null;\r\n      }\r\n\r\n      // test the value of the control against the regexp supplied\r\n      const valid = regex.test(control.value);\r\n\r\n      // if true, return no error (no error), else return error passed in the second parameter\r\n      return valid ? null : error;\r\n    };\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {StorageConstants} from '../../constant/storage-constants';\r\nimport {Auth} from 'aws-amplify';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n  // private storage = sessionStorage;\r\n  private storage = localStorage;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  /**\r\n   * This method is use for get Access Token from local storage data.\r\n   */\r\n  getAccessToken(): any {\r\n    return this.storage.getItem(StorageConstants.X_ACCESS_TOKEN);\r\n  }\r\n\r\n  /**\r\n   * This method is use for set Access Token to local storage data.\r\n   * @param {data:any}\r\n   */\r\n  setAccessToken(data: any) {\r\n    return this.storage.setItem(StorageConstants.X_ACCESS_TOKEN, data);\r\n  }\r\n\r\n  /*Clear Local storage for logout*/\r\n  clearLocalStorage() {\r\n    this.storage.removeItem(StorageConstants.X_ACCESS_TOKEN);\r\n  }\r\n\r\n  setEmailAddress(email: string) {\r\n    this.storage.setItem(StorageConstants.X_EMAIL, email);\r\n  }\r\n\r\n  getEmailAddress(): string {\r\n    return this.storage.getItem(StorageConstants.X_EMAIL);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FieldsValidateService {\r\n  /**\r\n   * Constructor\r\n   */\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n * It Validate all the fields validations one by one and will display the validation message.\r\n */\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        if (control.invalid) {\r\n          control.markAsDirty({ onlySelf: true });\r\n        }\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFormFields(control);\r\n      } else if (control instanceof FormArray) {\r\n        Object.keys(control.controls).forEach((subFields) => {\r\n          const subcontrol = control.controls[subFields];\r\n          if (subcontrol instanceof FormGroup) {\r\n            this.validateAllFormFields(subcontrol);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport * as tutorialImages from '../../shared/localData/tutorialImages.json';\r\nimport * as bankData from '../../shared/localData/bankData.json';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalDataService {\r\n  public images = [];\r\n  public allBanks = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // this function is use to get all images of tutorial page\r\n  getTutorialImages() {\r\n    this.images = tutorialImages.default;\r\n    return this.images;\r\n  }\r\n\r\n  // this function is use to get all banks\r\n  getALlBanks() {\r\n    this.allBanks = bankData.default;\r\n    return this.allBanks;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}